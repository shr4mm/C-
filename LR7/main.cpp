#include <iomanip>
#include <iostream>
using namespace std;
int main() {
    cout << "Task 1";
    long long c0;
    int steps = 0;

    // Запрос ввода у пользователя
    cout << "Введите положительное целое число: ";
    cin >> c0;

    // Проверка на корректность ввода
    if (c0 <= 0) {
        cout << "Ошибка: нужно ввести положительное целое число!" << endl;
        return 1;
    }

    // Вывод последовательности и выполнение алгоритма
    cout << "Последовательность: ";
    while (c0 != 1) {
        cout << c0 << " "; // Вывод текущего значения
        if (c0 % 2 == 0) {
            c0 /= 2; // Если чётное, делим на 2
        } else {
            c0 = 3 * c0 + 1; // Если нечётное, умножаем на 3 и прибавляем 1
        }
        steps++; // Увеличиваем счётчик шагов
    }

    // Вывод последнего значения (1) и итогов
    cout << c0 << endl;
    cout << "Количество шагов: " << steps << endl;
    cout << "Task 2";

    double pi4 = 0.0; // Переменная для хранения суммы (четверть числа ?)
    long n;           // Количество итераций

    // Запрос у пользователя количества итераций
    cout << "Number of iterations? ";
    cin >> n;

    // Основной цикл для вычисления суммы
    for (long i = 0; i < n; i++) {
        // Формула: добавляем или вычитаем очередное дробное слагаемое
        if (i % 2 == 0) {
            pi4 += 1.0 / (2 * i + 1); // Если итерация чётная, прибавляем
        } else {
            pi4 -= 1.0 / (2 * i + 1); // Если итерация нечётная, вычитаем
        }
    }

    // Вывод результата с высокой точностью
    cout << fixed << setprecision(20); // Устанавливаем 20 знаков после запятой
    cout << "Pi = " << pi4 * 4.0 << endl;

    cout << "Task 3";

    // Запит у користувача
    cout << "Введ?ть розм?р сторони квадрата (б?льше 1): ";
    cin >> n;

    // Перев?рка коректност? введення
    if (n <= 1) {
        cout << "Помилка: число має бути б?льше 1!" << endl;
        return 1; // Завершення програми у випадку помилки
    }

    if (n > 20) {
        cout << "Помилка: число завелике! Обер?ть значення до 20." << endl;
        return 1;
    }

    // Малювання верхньої меж? квадрата
    cout << '+';
    for (int i = 0; i < n; i++) {
        cout << '-';
    }
    cout << '+' << endl;

    // Малювання бок?в квадрата
    for (int i = 0; i < n; i++) {
        cout << '|';
        for (int j = 0; j < n; j++) {
            cout << ' ';
        }
        cout << '|' << endl;
    }

    // Малювання нижньої меж? квадрата
    cout << '+';
    for (int i = 0; i < n; i++) {
        cout << '-';
    }
    cout << '+' << endl;
    return 0;
}
